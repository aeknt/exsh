#!/usr/bin/env execlineb
getpid -E pid
multisubstitute { define version 0.2.1 importas 1 1 importas varstest vars importas exshexec 0 importas exshrc exshrc }
backtick -E exsh { realpath $exshexec }
ifelse { test -z $1 } {
	ifthenelse { test -z $varstest  } { export vars "importas 0 0" exec $exsh } { true } 
	importas home HOME
	backtick -E configlocation { ifthenelse { test -z $exshrc } { printf ${home}/.exshrc } { printf ${exshrc} } }
	backtick -E PS1 { ifthenelse { test -f ${configlocation} } { ${configlocation} } { printf "\033[38;2;0;255;127mâ†’ \033[0;0m" } }
	foreground { echo -n $PS1 }
	backtick -E functions { ifthenelse { test -f ${configlocation} } { ${configlocation} functions } { true } }
	forstdin -o 0 exsh_cmd

	importas exsh_cmd exsh_cmd
	ifelse { test -z $exsh_cmd } { foreground { echo -n $PS1 } exit }
	foreground {
		importas -s exsh_split exsh_cmd
		backtick -E if { pipeline { echo $exsh_cmd } cut -d " " -f1 }
		backtick -E fn { foreground { pipeline { echo $functions } grep -w ${if} } true }
		ifelse { test $if = $fn } {
			ifthenelse { test -f ${configlocation} } { ${configlocation} fn $exsh_split } { true } }
		ifelse { test $if = cd } {
			backtick -E path { pipeline { echo $exsh_cmd } cut -d " " -f2 }
			backtick -E another { pipeline { echo $exsh_cmd } cut -d " " -f3 }
			ifelse { test cd = $path  }
				{ echo cd: usage: cd path [prog...] }
			ifelse { test -z $another } {
				cd $path exec $exsh }
			backtick -E lenght { pipeline { echo $exsh_cmd } wc -w }
			backtick -E comm { pipeline { echo $exsh_cmd } cut -d " " -f3-${lenght} }
			cd $path importas -s vars vars
			multisubstitute { $vars } execlineb -c $comm }
		ifelse { test $if = exit } {
			kill $pid }
		importas -s vars vars
		backtick -E exsh_fn_cmd { pipeline { echo $exsh_cmd } sed "s'%var'${exsh} %var'g" }
		multisubstitute { $vars } execlineb -c $exsh_fn_cmd }
	foreground { echo -n $PS1 } }
ifelse { test $1 = -v } { echo $version }
ifelse { test $1 = --version } { echo $version }
ifelse { test $1 = -i } { rlwrap -c $exsh }
ifelse { test $1 = %var } {
	backtick action { dollarat }
	multisubstitute { importas -su action action importas cmd 2 importas var 3 importas cont 4 }
	ifthenelse { test -z $varstest  } { export vars "importas 0 0" exec $exsh $action } { true }
	backtick -E lenght { pipeline { echo $action } wc -w }
	ifelse { test $cmd = -s } { 
		backtick comm { pipeline { echo $action } cut -d " " -f4-${lenght} }
		multisubstitute { importas -s command comm importas comm comm importas vars vars }
		export vars "${vars} importas ${var} ${var}"
		export $var "${comm}" foreground { exec $exsh } }
	ifelse { test $cmd = -x } { 
		backtick comm { pipeline { echo $action } cut -d " " -f4-${lenght} }
		multisubstitute { importas -s command comm importas comm comm importas vars vars }
		backtick -E wat { $command }
		export vars "${vars} importas ${var} ${var}"
		export $var "${wat}" foreground { exec $exsh } }
	ifelse { test $cmd = -u } {
		importas vars vars
		backtick vars { pipeline { echo "${vars}" } sed "s/ importas ${var} ${var}//g" }
		unexport $var exec $exsh }
	ifelse { test $cmd = -i } {
		ifelse { test -z $cont } {
			importas vars vars
			export vars "${vars} importas ${var} ${var}" exec $exsh }
			importas vars vars
			export vars "${vars} importas ${var} ${cont}" exec $exsh }
	ifelse { test $cmd = -e } {
		backtick -E comm { pipeline { echo $exsh_cmd } cut -d " " -f4-${lenght} }
		export $var "${comm}" exec $exsh }
	ifelse { test $cmd = -ue } {
		unexport $var exec $exsh }
	foreground { echo var: usage: "$var" [ -s | -x | -u | -i | -e | -ue ] key value... } }
ifelse { test $1 = -h } { 
	echo "exsh: usage: exsh [ -i | -v | -h | --version |   ] 
----[functions]----
	function: cd: usage: cd path [ prog... ]
	function: exit: usage: exit (may require using it multiple times because exsh is forking monstrozity)
	function: %var: usage: %var [ -s | -x | -u | -i | -e | -ue ] key value...
----[config]----
	location: `importas home HOME $home/.exshrc` (default)
	use enviroment variable exshrc to change location of it
	when ran without args, it should print prompt
	when ran with functions arg, it should print all functions defined
	when ran with fn <function>, it should execute given function
exsh: version: $version" }
echo "exsh: usage: exsh [ -i | -v | -h |   ]"
